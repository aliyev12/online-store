{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/AddToCart.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addToCart($id: ID!) {\\n    addToCart(id: $id) {\\n      id\\n      quantity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nvar ADD_TO_CART_MUTATION = gql(_templateObject());\n\nvar AddToCart = function AddToCart(_ref) {\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  return React.createElement(\"button\", {\n    onClick: addToCart,\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Add\", loading && 'ing', \" To Cart \\uD83D\\uDED2\");\n};\n\nexport default AddToCart; // import React from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// const ADD_TO_CART_MUTATION = gql`\n//   mutation addToCart($id: ID!) {\n//     addToCart(id: $id) {\n//       id\n//       quantity\n//     }\n//   }\n// `;\n// const AddToCart = ({ id }) => {\n//   return (\n//     <Mutation mutation={ADD_TO_CART_MUTATION} variables={{ id }}>\n//       {addToCart => <button onClick={addToCart}>Add To Cart ðŸ›’</button>}\n//     </Mutation>\n//   );\n// };\n// export default AddToCart;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/AddToCart.js"],"names":["React","useMutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","id","variables","refetchQueries","query","addToCart","error","loading"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;;AAQA,IAAMG,SAAS,GAAG,SAAZA,SAAY,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACYL,WAAW,CAACG,oBAAD,EAAuB;AACxEG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF,KAD6D;AAExEE,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEN;AAAT,KAAD;AAFwD,GAAvB,CADvB;AAAA;AAAA,MACrBO,SADqB;AAAA;AAAA,MACRC,KADQ,kBACRA,KADQ;AAAA,MACDC,OADC,kBACDA,OADC;;AAK5B,SACE;AAAQ,IAAA,OAAO,EAAEF,SAAjB;AAA4B,IAAA,QAAQ,EAAEE,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMA,OAAO,IAAI,KADjB,0BADF;AAKD,CAVD;;AAYA,eAAeP,SAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\nconst AddToCart = ({ id }) => {\n  const [addToCart, { error, loading }] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: { id },\n    refetchQueries: [{ query: CURRENT_USER_QUERY }]\n  });\n  return (\n    <button onClick={addToCart} disabled={loading}>\n      Add{loading && 'ing'} To Cart ðŸ›’\n    </button>\n  );\n};\n\nexport default AddToCart;\n\n// import React from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n\n// const ADD_TO_CART_MUTATION = gql`\n//   mutation addToCart($id: ID!) {\n//     addToCart(id: $id) {\n//       id\n//       quantity\n//     }\n//   }\n// `;\n\n// const AddToCart = ({ id }) => {\n//   return (\n//     <Mutation mutation={ADD_TO_CART_MUTATION} variables={{ id }}>\n//       {addToCart => <button onClick={addToCart}>Add To Cart ðŸ›’</button>}\n//     </Mutation>\n//   );\n// };\n\n// export default AddToCart;\n"]},"metadata":{},"sourceType":"module"}