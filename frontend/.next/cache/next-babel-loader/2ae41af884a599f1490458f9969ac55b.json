{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    itemsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nimport Error from './ErrorMessage';\nexport var PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page;\n\n  var _useQuery = useQuery(PAGINATION_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return React.createElement(\"p\", null, \"Loading...\");\n  if (error) return React.createElement(Error, {\n    error: error\n  });\n  var count = data.itemsConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage);\n  return React.createElement(PaginationStyles, {\n    \"data-test\": \"pagination\"\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"Great Fits! Page \", page, \" of \", pages)), React.createElement(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page - 1\n      }\n    }\n  }, React.createElement(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1\n  }, \"\\u2190 Prev\")), React.createElement(\"p\", null, \"Page \", page, \" of\", React.createElement(\"span\", {\n    className: \"totalPages\"\n  }, pages)), React.createElement(\"p\", null, count, \" Items Total\"), React.createElement(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page + 1\n      }\n    }\n  }, React.createElement(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages\n  }, \"Next \\u2192\")));\n};\n\nexport default Pagination; // import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n// export default Pagination;","map":null,"metadata":{},"sourceType":"module"}