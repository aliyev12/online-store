{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/UpdateItem.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_ITEM_MUTATION(\\n    $title: String!\\n    $description: String!\\n    $price: Int!\\n    $image: String\\n    $largeImage: String\\n  ) {\\n    createItem(\\n      title: $title\\n      description: $description\\n      price: $price\\n      image: $image\\n      largeImage: $largeImage\\n    ) {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nexport var UPDATE_ITEM_MUTATION = gql(_templateObject());\n\nvar UpdateItem = function UpdateItem() {\n  var _useState = useState('Item Title'),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState('Item Description'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState('./temp.img'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState('./temp.img'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      largeImage = _useState8[0],\n      setLargeImage = _useState8[1];\n\n  var _useState9 = useState(9998),\n      _useState10 = _slicedToArray(_useState9, 2),\n      price = _useState10[0],\n      setPrice = _useState10[1];\n\n  return React.createElement(Mutation, {\n    mutation: UPDATE_ITEM_MUTATION,\n    variables: {\n      title: title,\n      description: description,\n      image: image,\n      largeImage: largeImage,\n      price: price\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, function (createItem, _ref) {\n    var loading = _ref.loading,\n        error = _ref.error;\n    return React.createElement(Form, {\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(e) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // Stop the form from submitting\n                  e.preventDefault(); // Call the mutation\n\n                  _context.next = 3;\n                  return createItem();\n\n                case 3:\n                  res = _context.sent;\n                  // Change them to the single item page\n                  console.log('res = ', res);\n                  Router.push({\n                    pathname: '/item',\n                    query: {\n                      id: res.data.createItem.id\n                    }\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Title\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title\",\n      required: true,\n      value: title,\n      onChange: function onChange(e) {\n        return setTitle(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Price\", React.createElement(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      name: \"price\",\n      placeholder: \"Price\",\n      required: true,\n      value: price,\n      onChange: function onChange(e) {\n        return setPrice(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Description\", React.createElement(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"Enter a Description\",\n      required: true,\n      value: description,\n      onChange: function onChange(e) {\n        return setDescription(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Submit\")));\n  });\n};\n\nexport default UpdateItem;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/UpdateItem.js"],"names":["React","useState","Mutation","gql","Router","Form","formatMoney","Error","UPDATE_ITEM_MUTATION","UpdateItem","title","setTitle","description","setDescription","image","setImage","largeImage","setLargeImage","price","setPrice","createItem","loading","error","e","preventDefault","res","console","log","push","pathname","query","id","data","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nexport const UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nconst UpdateItem = () => {\n  const [title, setTitle] = useState('Item Title');\n  const [description, setDescription] = useState('Item Description');\n  const [image, setImage] = useState('./temp.img');\n  const [largeImage, setLargeImage] = useState('./temp.img');\n  const [price, setPrice] = useState(9998);\n\n  return (\n    <Mutation\n      mutation={UPDATE_ITEM_MUTATION}\n      variables={{\n        title,\n        description,\n        image,\n        largeImage,\n        price\n      }}\n    >\n      {(createItem, { loading, error }) => (\n        <Form\n          onSubmit={ async e => {\n            // Stop the form from submitting\n            e.preventDefault();\n            // Call the mutation\n            const res = await createItem();\n            // Change them to the single item page\n            console.log('res = ', res);\n            Router.push({\n                pathname: '/item',\n                query: { id: res.data.createItem.id }\n            });\n          }}\n          method=\"post\"\n        >\n        <Error error={error}/>\n          <fieldset disabled={loading} aria-busy={loading}>\n            <label htmlFor=\"title\">\n              Title\n              <input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                placeholder=\"Title\"\n                required\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"price\">\n              Price\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"Price\"\n                required\n                value={price}\n                onChange={e => setPrice(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"title\">\n              Description\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"Enter a Description\"\n                required\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </fieldset>\n        </Form>\n      )}\n    </Mutation>\n  );\n};\n\nexport default UpdateItem;\n"]},"metadata":{},"sourceType":"module"}