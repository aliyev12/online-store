{"ast":null,"code":"import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nconst AddToCart = ({\n  id\n}) => {\n  const [addToCart, {\n    error,\n    loading\n  }] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  return React.createElement(\"button\", {\n    onClick: addToCart,\n    disabled: loading\n  }, \"Add\", loading && 'ing', \" To Cart \\uD83D\\uDED2\");\n};\n\nexport default AddToCart; // import React from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// const ADD_TO_CART_MUTATION = gql`\n//   mutation addToCart($id: ID!) {\n//     addToCart(id: $id) {\n//       id\n//       quantity\n//     }\n//   }\n// `;\n// const AddToCart = ({ id }) => {\n//   return (\n//     <Mutation mutation={ADD_TO_CART_MUTATION} variables={{ id }}>\n//       {addToCart => <button onClick={addToCart}>Add To Cart ðŸ›’</button>}\n//     </Mutation>\n//   );\n// };\n// export default AddToCart;","map":null,"metadata":{},"sourceType":"module"}