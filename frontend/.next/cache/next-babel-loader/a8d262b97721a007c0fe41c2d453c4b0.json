{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION(\\n    $name: String!\\n    $email: String!\\n    $password: String!\\n  ) {\\n    signup(name: $name, email: $email, password: $password) {\\n      email\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nexport var SIGNUP_MUTATION = gql(_templateObject());\n\nvar Signup = function Signup() {\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useMutation = useMutation(SIGNUP_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  var handleFormField = function handleFormField(_ref) {\n    var target = _ref.target;\n    setInputs(_objectSpread({}, inputs, _defineProperty({}, target.name, target.value)));\n  };\n\n  return React.createElement(Form, {\n    method: \"post\",\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return signup();\n\n              case 3:\n                res = _context.sent;\n                console.log(res);\n                setInputs(_objectSpread({}, inputs, {\n                  name: '',\n                  email: '',\n                  password: ''\n                }));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading\n  }, React.createElement(\"h2\", null, \"Sign Up for An Account\"), React.createElement(Error, {\n    error: error\n  }), React.createElement(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: inputs.email,\n    onChange: handleFormField\n  })), React.createElement(\"label\", {\n    htmlFor: \"name\"\n  }, \"Name\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: inputs.name,\n    onChange: handleFormField\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: inputs.password,\n    onChange: handleFormField\n  })), React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Sign Up!\")));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}