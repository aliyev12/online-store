{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/OrderList.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul.withConfig({\n  displayName: \"OrderList__OrderUl\",\n  componentId: \"sc-1fmqr9d-0\"\n})([\"display:grid;grid-gap:4rem;grid-template-columns:repeat(auto-fit,minmax(40%,1fr));\"]);\n\nconst OrderList = () => {\n  const {\n    data: {\n      orders\n    },\n    loading,\n    error\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"You have \", orders.length, \" orders\"), React.createElement(OrderUl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, orders.map(order => React.createElement(OrderItemStyles, {\n    key: order.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: {\n      pathname: '/order',\n      query: {\n        id: order.id\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"order-meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, order.items.reduce((a, b) => a + b.quantity, 0)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, order.items.length, \" Products\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, formatDistance(new Date(order.createdAt), new Date())), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, formatMoney(order.total))), React.createElement(\"div\", {\n    className: \"images\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, order.items.map(item => React.createElement(\"img\", {\n    key: item.id,\n    src: item.image,\n    alt: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))))))));\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/OrderList.js"],"names":["React","useQuery","formatDistance","Link","styled","gql","formatMoney","OrderItemStyles","Error","USER_ORDERS_QUERY","OrderUl","ul","OrderList","data","orders","loading","error","length","map","order","id","pathname","query","items","reduce","a","b","quantity","Date","createdAt","total","item","image","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,iBAAiB,GAAGJ,GAAI;;;;;;;;;;;;;;;;CAA9B;AAkBA,MAAMK,OAAO,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,0FAAb;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KADF;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFf,QAAQ,CAACQ,iBAAD,CAJZ;AAKA,MAAIM,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcF,MAAM,CAACG,MAArB,YADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,GAAP,CAAWC,KAAK,IACf,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEA,KAAK,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,QADN;AAEJC,MAAAA,KAAK,EAAE;AAAEF,QAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ;AAFH,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACC,QAAnC,EAA6C,CAA7C,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,KAAK,CAACI,KAAN,CAAYN,MAAhB,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,cAAc,CAAC,IAAI0B,IAAJ,CAAST,KAAK,CAACU,SAAf,CAAD,EAA4B,IAAID,IAAJ,EAA5B,CAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAItB,WAAW,CAACa,KAAK,CAACW,KAAP,CAAf,CAJF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACI,KAAN,CAAYL,GAAZ,CAAgBa,IAAI,IACnB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACX,EAAf;AAAmB,IAAA,GAAG,EAAEW,IAAI,CAACC,KAA7B;AAAoC,IAAA,GAAG,EAAED,IAAI,CAACE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CANF,CADF,CADD,CADH,CAFF,CADF;AA+BD,CAvCD;;AAyCA,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-gap: 4rem;\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\n`;\n\nconst OrderList = () => {\n  const {\n    data: { orders },\n    loading,\n    error\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <Error error={error} />;\n  return (\n    <div>\n      <h2>You have {orders.length} orders</h2>\n      <OrderUl>\n        {orders.map(order => (\n          <OrderItemStyles key={order.id}>\n            <Link\n              href={{\n                pathname: '/order',\n                query: { id: order.id }\n              }}\n            >\n              <a>\n                <div className=\"order-meta\">\n                  <p>{order.items.reduce((a, b) => a + b.quantity, 0)}</p>\n                  <p>{order.items.length} Products</p>\n                  <p>{formatDistance(new Date(order.createdAt), new Date())}</p>\n                  <p>{formatMoney(order.total)}</p>\n                </div>\n                <div className=\"images\">\n                  {order.items.map(item => (\n                    <img key={item.id} src={item.image} alt={item.title} />\n                  ))}\n                </div>\n              </a>\n            </Link>\n          </OrderItemStyles>\n        ))}\n      </OrderUl>\n    </div>\n  );\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}