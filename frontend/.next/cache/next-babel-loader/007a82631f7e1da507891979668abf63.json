{"ast":null,"code":"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport User from './User';\nexport const CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nconst CreateItem = () => {\n  const [title, setTitle] = useState('Item Title');\n  const [description, setDescription] = useState('Item Description');\n  const [image, setImage] = useState('');\n  const [largeImage, setLargeImage] = useState('');\n  const [price, setPrice] = useState(9998);\n  const [createItem, {\n    loading,\n    error\n  }] = useMutation(CREATE_ITEM_MUTATION);\n\n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'greatfits'); // https://res.cloudinary.com/greatfits/image/upload/v1564874789/sample.jpg\n\n    const res = await fetch(`https://api.cloudinary.com/v1_1/greatfits/image/upload`, {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n    setLargeImage(file.eager[0].secure_url);\n  };\n\n  return React.createElement(Form, {\n    \"data-test\": \"form\",\n    onSubmit: async e => {\n      // Stop the form from submitting\n      e.preventDefault(); // Call the mutation\n\n      const res = await createItem({\n        variables: {\n          title,\n          description,\n          image,\n          largeImage,\n          price\n        }\n      }); // Change them to the single item page\n\n      Router.push({\n        pathname: '/item',\n        query: {\n          id: res.data.createItem.id\n        }\n      });\n    },\n    method: \"post\"\n  }, React.createElement(Error, {\n    error: error\n  }), React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading\n  }, React.createElement(\"label\", {\n    htmlFor: \"file\"\n  }, \"Image\", React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    name: \"file\",\n    placeholder: \"Upload an image\",\n    required: true,\n    onChange: uploadFile\n  }), image && React.createElement(\"img\", {\n    src: image,\n    alt: \"Upload Preview\",\n    width: \"200\"\n  })), React.createElement(\"label\", {\n    htmlFor: \"title\"\n  }, \"Title\", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    placeholder: \"Title\",\n    required: true,\n    value: title,\n    onChange: e => setTitle(e.target.value)\n  })), React.createElement(\"label\", {\n    htmlFor: \"price\"\n  }, \"Price\", React.createElement(\"input\", {\n    type: \"number\",\n    id: \"price\",\n    name: \"price\",\n    placeholder: \"Price\",\n    required: true,\n    value: price,\n    onChange: e => setPrice(e.target.value)\n  })), React.createElement(\"label\", {\n    htmlFor: \"title\"\n  }, \"Description\", React.createElement(\"textarea\", {\n    id: \"description\",\n    name: \"description\",\n    placeholder: \"Enter a Description\",\n    required: true,\n    value: description,\n    onChange: e => setDescription(e.target.value)\n  })), React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Submit\")));\n};\n\nexport default CreateItem; // import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Router from 'next/router';\n// import Form from './styles/Form';\n// import formatMoney from '../lib/formatMoney';\n// import Error from './ErrorMessage';\n// import User from './User';\n// export const CREATE_ITEM_MUTATION = gql`\n//   mutation CREATE_ITEM_MUTATION(\n//     $title: String!\n//     $description: String!\n//     $price: Int!\n//     $image: String\n//     $largeImage: String\n//   ) {\n//     createItem(\n//       title: $title\n//       description: $description\n//       price: $price\n//       image: $image\n//       largeImage: $largeImage\n//     ) {\n//       id\n//       title\n//     }\n//   }\n// `;\n// const CreateItem = (props) => {\n//   const [title, setTitle] = useState('Item Title');\n//   const [description, setDescription] = useState('Item Description');\n//   const [image, setImage] = useState('');\n//   const [largeImage, setLargeImage] = useState('');\n//   const [price, setPrice] = useState(9998);\n//   const uploadFile = async e => {\n//     const files = e.target.files;\n//     const data = new FormData();\n//     data.append('file', files[0]);\n//     data.append('upload_preset', 'greatfits');\n//     // https://res.cloudinary.com/greatfits/image/upload/v1564874789/sample.jpg\n//     const res = await fetch(`https://api.cloudinary.com/v1_1/greatfits/image/upload`, {\n//       method: 'POST',\n//       body: data\n//     });\n//     const file = await res.json();\n//     setImage(file.secure_url);\n//     setLargeImage(file.eager[0].secure_url);\n//   }\n//   return (\n//     <Mutation\n//       mutation={CREATE_ITEM_MUTATION}\n//       variables={{\n//         title,\n//         description,\n//         image,\n//         largeImage,\n//         price\n//       }}\n//     >\n//       {(createItem, { loading, error }) => (\n//         <Form\n//           onSubmit={ async e => {\n//             // Stop the form from submitting\n//             e.preventDefault();\n//             // Call the mutation\n//             const res = await createItem();\n//             // Change them to the single item page\n//             Router.push({\n//                 pathname: '/item',\n//                 query: { id: res.data.createItem.id }\n//             });\n//           }}\n//           method=\"post\"\n//         >\n//         <Error error={error}/>\n//           <fieldset disabled={loading} aria-busy={loading}>\n//             <label htmlFor=\"file\">\n//               Image\n//               <input\n//                 type=\"file\"\n//                 id=\"file\"\n//                 name=\"file\"\n//                 placeholder=\"Upload an image\"\n//                 required\n//                 onChange={uploadFile}\n//               />\n//               {image && <img src={image} alt=\"Upload Preview\" width=\"200\"/>}\n//             </label>\n//             <label htmlFor=\"title\">\n//               Title\n//               <input\n//                 type=\"text\"\n//                 id=\"title\"\n//                 name=\"title\"\n//                 placeholder=\"Title\"\n//                 required\n//                 value={title}\n//                 onChange={e => setTitle(e.target.value)}\n//               />\n//             </label>\n//             <label htmlFor=\"price\">\n//               Price\n//               <input\n//                 type=\"number\"\n//                 id=\"price\"\n//                 name=\"price\"\n//                 placeholder=\"Price\"\n//                 required\n//                 value={price}\n//                 onChange={e => setPrice(e.target.value)}\n//               />\n//             </label>\n//             <label htmlFor=\"title\">\n//               Description\n//               <textarea\n//                 id=\"description\"\n//                 name=\"description\"\n//                 placeholder=\"Enter a Description\"\n//                 required\n//                 value={description}\n//                 onChange={e => setDescription(e.target.value)}\n//               />\n//             </label>\n//             <button type=\"submit\">Submit</button>\n//           </fieldset>\n//         </Form>\n//       )}\n//     </Mutation>\n//   );\n// };\n// export default CreateItem;","map":null,"metadata":{},"sourceType":"module"}