{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REMOVE_FROM_CART_MUTATION($id: ID!) {\\n    removeFromCart(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nexport var REMOVE_FROM_CART_MUTATION = gql(_templateObject());\nvar BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.red;\n});\n\nvar RemoveFromCart = function RemoveFromCart(_ref) {\n  var id = _ref.id;\n\n  // This gets called as soon as we get a response back from the server as soon as the mutation gets performed\n  var update = function update(cache, payload) {\n    // 1. First read the cache\n    var data = cache.readQuery({\n      query: CURRENT_USER_QUERY\n    }); // 2. Remove that item from the cart\n\n    var cartItemId = payload.data.removeFromCart.id;\n    data.me.cart = data.me.cart.filter(function (cartItem) {\n      return cartItem.id !== cartItemId;\n    }); // 3. Write it back to the cache\n\n    cache.writeQuery({\n      query: CURRENT_USER_QUERY,\n      data: data\n    });\n  };\n\n  var _useMutation = useMutation(REMOVE_FROM_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update,\n    optimisticResponse: {\n      __typename: 'Mutation',\n      removeFromCart: {\n        __typename: 'CartItem',\n        id: id\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      removeFromCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return React.createElement(BigButton, {\n    title: \"Delete Item\",\n    disabled: loading,\n    onClick: function onClick() {\n      removeFromCart()[\"catch\"](function (err) {\n        return alert(err.message);\n      });\n    }\n  }, \"\\xD7\", loading && '...');\n};\n\nexport default RemoveFromCart;","map":null,"metadata":{},"sourceType":"module"}