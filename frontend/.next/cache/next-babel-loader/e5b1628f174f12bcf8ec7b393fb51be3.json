{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/RequestReset.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst RequestReset = () => {\n  const [email, setEmail] = useState('');\n  const [reset, {\n    error,\n    loading,\n    called\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: {\n      email\n    }\n  });\n  return React.createElement(Form, {\n    method: \"post\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      setEmail('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Request a password reset\"), React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), !error && !loading && called && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Success! Check your email for a reset link!\"), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Request Reset!\")));\n};\n\nexport default RequestReset; // import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n// const REQUEST_RESET_MUTATION = gql`\n//   mutation REQUEST_RESET_MUTATION($email: String!) {\n//     requestReset(email: $email) {\n//       message\n//     }\n//   }\n// `;\n// const RequestReset = () => {\n//   const [email, setEmail] = useState('');\n//   return (\n//     <Mutation\n//       mutation={REQUEST_RESET_MUTATION}\n//       variables={{ email }}\n//     >\n//       {(reset, { error, loading, called }) => {\n//         return (\n//           <Form\n//             method=\"post\"\n//             onSubmit={async e => {\n//               e.preventDefault();\n//               await reset();\n//               setEmail('');\n//             }}\n//           >\n//             <fieldset disabled={loading} aria-busy={loading}>\n//               <h2>Request a password reset</h2>\n//               <Error error={error} />\n//               {!error && !loading && called && <p>Success! Check your email for a reset link!</p>}\n//               <label htmlFor=\"email\">\n//                 Email\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   value={email}\n//                   onChange={e => setEmail(e.target.value)}\n//                 />\n//               </label>\n//               <button type=\"submit\">Request Reset!</button>\n//             </fieldset>\n//           </Form>\n//         );\n//       }}\n//     </Mutation>\n//   );\n// };\n// export default RequestReset;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/RequestReset.js"],"names":["React","useState","useMutation","gql","Form","Error","REQUEST_RESET_MUTATION","RequestReset","email","setEmail","reset","error","loading","called","variables","e","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,sBAAsB,GAAGH,GAAI;;;;;;CAAnC;;AAQA,MAAMI,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAR,IAAsCX,WAAW,CACrDI,sBADqD,EAErD;AACEQ,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AADb,GAFqD,CAAvD;AAOA,SACE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,QAAQ,EAAE,MAAMO,CAAN,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMN,KAAK,EAAX;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAU,IAAA,QAAQ,EAAEG,OAApB;AAA6B,iBAAWA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACA,KAAD,IAAU,CAACC,OAAX,IAAsBC,MAAtB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,EAME;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,QAAQ,EAAEO,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,CARF,CADF;AA6BD,CAtCD;;AAwCA,eAAeX,YAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst RequestReset = () => {\n  const [email, setEmail] = useState('');\n  const [reset, { error, loading, called }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: { email }\n    }\n  );\n\n  return (\n    <Form\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        await reset();\n        setEmail('');\n      }}\n    >\n      <fieldset disabled={loading} aria-busy={loading}>\n        <h2>Request a password reset</h2>\n        <Error error={error} />\n        {!error && !loading && called && (\n          <p>Success! Check your email for a reset link!</p>\n        )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Request Reset!</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default RequestReset;\n\n\n// import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n\n// const REQUEST_RESET_MUTATION = gql`\n//   mutation REQUEST_RESET_MUTATION($email: String!) {\n//     requestReset(email: $email) {\n//       message\n//     }\n//   }\n// `;\n\n// const RequestReset = () => {\n//   const [email, setEmail] = useState('');\n\n//   return (\n//     <Mutation\n//       mutation={REQUEST_RESET_MUTATION}\n//       variables={{ email }}\n//     >\n//       {(reset, { error, loading, called }) => {\n//         return (\n//           <Form\n//             method=\"post\"\n//             onSubmit={async e => {\n//               e.preventDefault();\n//               await reset();\n//               setEmail('');\n//             }}\n//           >\n//             <fieldset disabled={loading} aria-busy={loading}>\n//               <h2>Request a password reset</h2>\n//               <Error error={error} />\n//               {!error && !loading && called && <p>Success! Check your email for a reset link!</p>}\n//               <label htmlFor=\"email\">\n//                 Email\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   value={email}\n//                   onChange={e => setEmail(e.target.value)}\n//                 />\n//               </label>\n//               <button type=\"submit\">Request Reset!</button>\n//             </fieldset>\n//           </Form>\n//         );\n//       }}\n//     </Mutation>\n//   );\n// };\n\n// export default RequestReset;\n"]},"metadata":{},"sourceType":"module"}