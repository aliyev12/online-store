{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/SingleItem.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    item(where: { id: $id }) {\\n      id\\n      title\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\n\nvar SingleItem = function SingleItem(_ref) {\n  var id = _ref.id;\n  return React.createElement(Query, {\n    query: SINGLE_ITEM_QUERY,\n    variables: {\n      id: id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, function (_ref2) {\n    var error = _ref2.error,\n        loading = _ref2.loading,\n        data = _ref2.data;\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Error!\");\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Loading...\");\n    console.log('data = ', data);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"SIngle Item..\", id);\n  });\n};\n\nexport default SingleItem;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/SingleItem.js"],"names":["React","Query","gql","SINGLE_ITEM_QUERY","SingleItem","id","error","loading","data","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;;AAUA,IAAME,UAAU,GAAG,SAAbA,UAAa,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AAC7B,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,iBAAd;AAAiC,IAAA,SAAS,EAAE;AAAEE,MAAAA,EAAE,EAAFA;AAAF,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,iBAA8B;AAAA,QAA3BC,KAA2B,SAA3BA,KAA2B;AAAA,QAApBC,OAAoB,SAApBA,OAAoB;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC3B,QAAIF,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,QAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBH,EAAjB,CAAP;AACH,GAND,CADF;AAUD,CAXD;;AAaA,eAAeD,UAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n    }\n  }\n`;\n\nconst SingleItem = ({ id }) => {\n  return (\n    <Query query={SINGLE_ITEM_QUERY} variables={{ id }}>\n    {({ error, loading, data }) => {\n        if (error) return <p>Error!</p>;\n        if (loading) return <p>Loading...</p>;\n        console.log('data = ', data);\n        return <p>SIngle Item..{id}</p>;\n    }}\n    </Query>\n  );\n};\n\nexport default SingleItem;\n"]},"metadata":{},"sourceType":"module"}