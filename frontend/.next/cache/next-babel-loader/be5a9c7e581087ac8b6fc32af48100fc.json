{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js\";\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({\n  page\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PAGINATION_QUERY);\n\n  if (loading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading...\");\n  } else {\n    const count = data.itemsConnection.aggregate.count;\n    const pages = Math.ceil(count / perPage);\n    return React.createElement(PaginationStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Great Fits! Page \", page, \" of \", pages)), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'items',\n        query: {\n          page: page - 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"prev\",\n      \"aria-disabled\": page <= 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\u2190 Prev\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Page \", page, \" of \", pages), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, count, \" Items Total\"), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'items',\n        query: {\n          page: page + 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"next\",\n      \"aria-disabled\": page >= pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Next \\u2192\")));\n  }\n};\n\nexport default Pagination; // import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n// export default Pagination;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js"],"names":["React","Head","Link","useQuery","gql","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","pathname","query"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,GAAI;;;;;;;;CAA7B;;AAUP,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACI,gBAAD,CAAzC;;AACA,MAAII,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAEO;AACL,UAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,UAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBG,IADpB,UAC8BO,KAD9B,CADF,CADF,EAME,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJG,QAAAA,QAAQ,EAAE,OADN;AAEJC,QAAAA,KAAK,EAAE;AAAEX,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CANF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQA,IADR,UACkBO,KADlB,CAjBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAJ,iBApBF,EAqBE,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJM,QAAAA,QAAQ,EAAE,OADN;AAEJC,QAAAA,KAAK,EAAE;AAAEX,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAIO,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CArBF,CADF;AAmCD;AACF,CA3CD;;AA6CA,eAAeR,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  const { data, loading, error } = useQuery(PAGINATION_QUERY);\n  if (loading) {\n    return <p>Loading...</p>;\n  } else {\n    const count = data.itemsConnection.aggregate.count;\n    const pages = Math.ceil(count / perPage);\n    return (\n      <PaginationStyles>\n        <Head>\n          <title>\n            Great Fits! Page {page} of {pages}\n          </title>\n        </Head>\n        <Link\n          prefetch\n          href={{\n            pathname: 'items',\n            query: { page: page - 1 }\n          }}\n        >\n          <a className=\"prev\" aria-disabled={page <= 1}>\n            ← Prev\n          </a>\n        </Link>\n        <p>\n          Page {page} of {pages}\n        </p>\n        <p>{count} Items Total</p>\n        <Link\n          prefetch\n          href={{\n            pathname: 'items',\n            query: { page: page + 1 }\n          }}\n        >\n          <a className=\"next\" aria-disabled={page >= pages}>\n            Next →\n          </a>\n        </Link>\n      </PaginationStyles>\n    );\n  }\n};\n\nexport default Pagination;\n\n// import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n\n// export default Pagination;\n"]},"metadata":{},"sourceType":"module"}