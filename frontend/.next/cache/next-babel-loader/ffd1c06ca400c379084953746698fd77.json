{"ast":null,"code":"import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nexport const REMOVE_FROM_CART_MUTATION = gql`\n  mutation REMOVE_FROM_CART_MUTATION($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\nconst BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], props => props.theme.red);\n\nconst RemoveFromCart = ({\n  id\n}) => {\n  // This gets called as soon as we get a response back from the server as soon as the mutation gets performed\n  const update = (cache, payload) => {\n    // 1. First read the cache\n    const data = cache.readQuery({\n      query: CURRENT_USER_QUERY\n    }); // 2. Remove that item from the cart\n\n    const cartItemId = payload.data.removeFromCart.id;\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId); // 3. Write it back to the cache\n\n    cache.writeQuery({\n      query: CURRENT_USER_QUERY,\n      data\n    });\n  };\n\n  const [removeFromCart, {\n    loading,\n    error\n  }] = useMutation(REMOVE_FROM_CART_MUTATION, {\n    variables: {\n      id\n    },\n    update,\n    optimisticResponse: {\n      __typename: 'Mutation',\n      removeFromCart: {\n        __typename: 'CartItem',\n        id\n      }\n    }\n  });\n  return React.createElement(BigButton, {\n    title: \"Delete Item\",\n    disabled: loading,\n    onClick: () => {\n      removeFromCart().catch(err => alert(err.message));\n    }\n  }, \"\\xD7\", loading && '...');\n};\n\nexport default RemoveFromCart;","map":null,"metadata":{},"sourceType":"module"}