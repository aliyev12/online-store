{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/OrderList.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst OrderList = () => {\n  const {\n    data: {\n      orders\n    },\n    loading,\n    error\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"You have \", orders.length, \" orders\");\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/OrderList.js"],"names":["React","useQuery","formatDistance","Link","styled","gql","formatMoney","OrderItemStyles","Error","USER_ORDERS_QUERY","OrderList","data","orders","loading","error","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,iBAAiB,GAAGJ,GAAI;;;;;;;;;;;;;;;;CAA9B;;AAkBA,MAAMK,SAAS,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAuCb,QAAQ,CAACQ,iBAAD,CAArD;AACF,MAAII,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,MAAM,CAACG,MAApB,YAAP;AACD,CALD;;AAOA,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst OrderList = () => {\n    const { data: { orders }, loading, error } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <Error error={error}/>;\n  return <p>You have {orders.length} orders</p>\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}