{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Signin = () => {\n  const [inputs, setInputs] = useState({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [signup, {\n    error,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  const handleFormField = ({\n    target\n  }) => {\n    setInputs(_objectSpread({}, inputs, {\n      [target.name]: target.value\n    }));\n  };\n\n  return React.createElement(Form, {\n    method: \"post\",\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await signup();\n      setInputs(_objectSpread({}, inputs, {\n        email: '',\n        name: '',\n        password: ''\n      }));\n    }\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading\n  }, React.createElement(\"h2\", null, \"Sign Into Your Account\"), React.createElement(Error, {\n    error: error\n  }), React.createElement(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: inputs.email,\n    onChange: handleFormField\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: inputs.password,\n    onChange: handleFormField\n  })), React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Sign In!\")));\n};\n\nexport default Signin; // import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n// import { CURRENT_USER_QUERY } from './User';\n// const SIGNIN_MUTATION = gql`\n//   mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n//     signin(email: $email, password: $password) {\n//       id\n//       email\n//       name\n//     }\n//   }\n// `;\n// const Signin = () => {\n//   const [inputs, setInputs] = useState({\n//     email: '',\n//     name: '',\n//     password: ''\n//   });\n//   const handleFormField = ({ target }) => {\n//     setInputs({\n//       ...inputs,\n//       [target.name]: target.value\n//     });\n//   };\n//   return (\n//     <Mutation\n//       mutation={SIGNIN_MUTATION}\n//       variables={inputs}\n//       refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n//     >\n//       {(signup, { error, loading }) => {\n//         return (\n//           <Form\n//             method=\"post\"\n//             onSubmit={async e => {\n//               e.preventDefault();\n//               const res = await signup();\n//               setInputs({\n//                 ...inputs,\n//                 email: '',\n//                 name: '',\n//                 password: ''\n//               });\n//             }}\n//           >\n//             <fieldset disabled={loading} aria-busy={loading}>\n//               <h2>Sign Into Your Account</h2>\n//               <Error error={error} />\n//               <label htmlFor=\"email\">\n//                 Email\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   value={inputs.email}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <label htmlFor=\"password\">\n//                 Password\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   value={inputs.password}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <button type=\"submit\">Sign In!</button>\n//             </fieldset>\n//           </Form>\n//         );\n//       }}\n//     </Mutation>\n//   );\n// };\n// export default Signin;","map":null,"metadata":{},"sourceType":"module"}