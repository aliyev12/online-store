{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Order.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ORDER_QUERY($id: ID!) {\\n    order(id: $id) {\\n      id\\n      charge\\n      total\\n      createdAt\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        title\\n        description\\n        price\\n        image\\n        quantity\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\n\nvar Order = function Order(_ref) {\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (error) return React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Loading...\");\n  var order = data.order;\n  if (!order) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"This order doesn't exist\");\n  return React.createElement(OrderStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sick Fits - Order \", order.id)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Order ID:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, id)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Charge\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, order.charge)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, format(new Date(order.createdAt), 'MMMM d, yyyy HH:mm'))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Order Total\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, formatMoney(order.total))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Item Count\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, order.items.length)), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, order.items.map(function (item) {\n    return React.createElement(\"div\", {\n      className: \"order-item\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      alt: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"item-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Qty: \", item.quantity), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Each: \", formatMoney(item.price)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Subtotal: \", formatMoney(item.price * item.quantity)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item.description)));\n  })));\n};\n\nOrder.propTypes = {\n  id: PropTypes.string.isRequired\n};\nexport default Order;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Order.js"],"names":["React","PropTypes","useQuery","format","Head","gql","formatMoney","Error","OrderStyles","SINGLE_ORDER_QUERY","Order","id","variables","data","error","loading","order","charge","Date","createdAt","total","items","length","map","item","image","title","quantity","price","description","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order(id: $id) {\n      id\n      charge\n      total\n      createdAt\n      user {\n        id\n      }\n      items {\n        id\n        title\n        description\n        price\n        image\n        quantity\n      }\n    }\n  }\n`;\n\nconst Order = ({ id }) => {\n  const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: { id }\n  });\n  if (error) return <Error error={error} />;\n  if (loading) return <p>Loading...</p>;\n  const order = data.order;\n  if (!order) return <p>This order doesn't exist</p>;\n  return (\n    <OrderStyles>\n      <Head>\n        <title>Sick Fits - Order {order.id}</title>\n      </Head>\n      <p>\n        <span>Order ID:</span>\n        <span>{id}</span>\n      </p>\n      <p>\n        <span>Charge</span>\n        <span>{order.charge}</span>\n      </p>\n      <p>\n        <span>Date</span>\n        <span>{format(new Date(order.createdAt), 'MMMM d, yyyy HH:mm')}</span>\n      </p>\n      <p>\n        <span>Order Total</span>\n        <span>{formatMoney(order.total)}</span>\n      </p>\n      <p>\n        <span>Item Count</span>\n        <span>{order.items.length}</span>\n      </p>\n      <div className=\"items\">\n        {order.items.map(item => (\n          <div className=\"order-item\" key={item.id}>\n            <img src={item.image} alt={item.title} />\n            <div className=\"item-details\">\n              <h2>{item.title}</h2>\n              <p>Qty: {item.quantity}</p>\n              <p>Each: {formatMoney(item.price)}</p>\n              <p>Subtotal: {formatMoney(item.price * item.quantity)}</p>\n              <p>{item.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </OrderStyles>\n  );\n};\n\nOrder.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}