{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Cart.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    toggleCart @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartOpen @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport handleError from '../lib/handleError';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport User from './User';\nimport useUser from '../hooks/useUser';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport TakeMyMoney from './TakeMyMoney';\nexport var LOCAL_STATE_QUERY = gql(_templateObject());\nexport var TOGGLE_CART_MUTATION = gql(_templateObject2());\n\nvar Cart = function Cart() {\n  var _useQuery = useQuery(LOCAL_STATE_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(TOGGLE_CART_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleCart = _useMutation2[0];\n\n  var _useUser = useUser(),\n      me = _useUser.data.me;\n\n  if (!me) {\n    return null;\n  } else {\n    return React.createElement(CartStyles, {\n      open: data.cartOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, loading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading...\"), error && handleError(error), !loading && !error && React.createElement(React.Fragment, null, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CloseButton, {\n      onClick: toggleCart,\n      title: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(Supreme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, me.cart.map(function (cartItem) {\n      return React.createElement(CartItem, {\n        key: cartItem.id,\n        cartItem: cartItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    })), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, formatMoney(calcTotalPrice(me.cart))), me.cart.length && React.createElement(TakeMyMoney, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(SickButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Checkout\")))));\n  }\n};\n\nexport default Cart; // import React from 'react';\n// import { Query, Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import CartStyles from './styles/CartStyles';\n// import Supreme from './styles/Supreme';\n// import CloseButton from './styles/CloseButton';\n// import SickButton from './styles/SickButton';\n// import User from './User';\n// export const LOCAL_STATE_QUERY = gql`\n//   query {\n//     cartOpen @client\n//   }\n// `;\n// export const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n// const Cart = () => {\n//   return (\n//     <Mutation mutation={TOGGLE_CART_MUTATION}>\n//       {toggleCart => (\n//         <Query query={LOCAL_STATE_QUERY}>\n//           {({ data }) =>\n//             console.log('data = ', data) || (\n//               <CartStyles open={data.cartOpen}>\n//                 <header>\n//                   <CloseButton onClick={toggleCart} title=\"close\">&times;</CloseButton>\n//                   <Supreme>\n//                     {/* Your Cart */}\n//                     11111\n//                     </Supreme>\n//                   <p>\n//                     22222\n//                     {/* You have __ items in your cart. */}\n//                     </p>\n//                   <footer>\n//                     <p>\n//                       $\n//                       {/* $10.10 */}\n//                       </p>\n//                     <SickButton />\n//                   </footer>\n//                 </header>\n//               </CartStyles>\n//             )\n//           }\n//         </Query>\n//       )}\n//     </Mutation>\n//   );\n// };\n// export default Cart;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Cart.js"],"names":["React","Query","Mutation","useQuery","useMutation","gql","handleError","CartStyles","Supreme","CloseButton","SickButton","User","useUser","CartItem","calcTotalPrice","formatMoney","TakeMyMoney","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","Cart","loading","error","data","toggleCart","me","cartOpen","cart","map","cartItem","id","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport handleError from '../lib/handleError';\n\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport User from './User';\nimport useUser from '../hooks/useUser';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport TakeMyMoney from './TakeMyMoney';\n\nexport const LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`;\n\nexport const TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\nconst Cart = () => {\n  const { loading, error, data } = useQuery(LOCAL_STATE_QUERY);\n  const [toggleCart] = useMutation(TOGGLE_CART_MUTATION);\n  const {\n    data: { me }\n  } = useUser();\n\n  if (!me) {\n    return null;\n  } else {\n    return (\n      <CartStyles open={data.cartOpen}>\n        {loading && <p>Loading...</p>}\n        {error && handleError(error)}\n        {!loading && !error && (\n          <>\n            <header>\n              <CloseButton onClick={toggleCart} title=\"close\">\n                &times;\n              </CloseButton>\n              <Supreme>\n                {/* Your Cart */}\n                {/* {me.name}\n                {me.name[me.name.length - 1] === 's' ? `'` : `'s`} Cart */}\n              </Supreme>\n              {/* <p>\n                You have {me.cart.length} item{me.cart.length === 1 ? '' : 's'}{' '}\n                in your cart.\n              </p> */}\n            </header>\n            <ul>\n              {me.cart.map(cartItem => (\n                <CartItem key={cartItem.id} cartItem={cartItem} />\n              ))}\n            </ul>\n            <footer>\n              <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n              {me.cart.length && (\n                <TakeMyMoney>\n                  <SickButton>Checkout</SickButton>\n                </TakeMyMoney>\n              )}\n            </footer>\n          </>\n        )}\n      </CartStyles>\n    );\n  }\n};\n\nexport default Cart;\n\n// import React from 'react';\n// import { Query, Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import CartStyles from './styles/CartStyles';\n// import Supreme from './styles/Supreme';\n// import CloseButton from './styles/CloseButton';\n// import SickButton from './styles/SickButton';\n// import User from './User';\n\n// export const LOCAL_STATE_QUERY = gql`\n//   query {\n//     cartOpen @client\n//   }\n// `;\n\n// export const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n\n// const Cart = () => {\n//   return (\n//     <Mutation mutation={TOGGLE_CART_MUTATION}>\n//       {toggleCart => (\n//         <Query query={LOCAL_STATE_QUERY}>\n//           {({ data }) =>\n//             console.log('data = ', data) || (\n//               <CartStyles open={data.cartOpen}>\n//                 <header>\n//                   <CloseButton onClick={toggleCart} title=\"close\">&times;</CloseButton>\n//                   <Supreme>\n//                     {/* Your Cart */}\n//                     11111\n//                     </Supreme>\n//                   <p>\n//                     22222\n//                     {/* You have __ items in your cart. */}\n//                     </p>\n//                   <footer>\n//                     <p>\n//                       $\n//                       {/* $10.10 */}\n//                       </p>\n//                     <SickButton />\n//                   </footer>\n//                 </header>\n//               </CartStyles>\n//             )\n//           }\n//         </Query>\n//       )}\n//     </Mutation>\n//   );\n// };\n\n// export default Cart;\n"]},"metadata":{},"sourceType":"module"}