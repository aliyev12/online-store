{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/RequestReset.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nexport var REQUEST_RESET_MUTATION = gql(_templateObject());\n\nvar RequestReset = function RequestReset() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: {\n      email: email\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      requestReset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading,\n      called = _useMutation2$.called;\n\n  return React.createElement(Form, {\n    method: \"post\",\n    \"data-test\": \"form\",\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return requestReset();\n\n              case 3:\n                setEmail('');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Request a password reset\"), React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), !error && !loading && called && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Success! Check your email for a reset link!\"), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Request Reset!\")));\n};\n\nexport default RequestReset;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/wes-bos/online-store/frontend/components/RequestReset.js"],"names":["React","useState","useMutation","gql","Form","Error","REQUEST_RESET_MUTATION","RequestReset","email","setEmail","variables","requestReset","error","loading","called","e","preventDefault","target","value"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,IAAMC,sBAAsB,GAAGH,GAAH,mBAA5B;;AAQP,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACCN,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAClBO,KADkB;AAAA,MACXC,QADW;;AAAA,qBAE0BP,WAAW,CAC5DI,sBAD4D,EAE5D;AACEI,IAAAA,SAAS,EAAE;AAAEF,MAAAA,KAAK,EAALA;AAAF;AADb,GAF4D,CAFrC;AAAA;AAAA,MAElBG,YAFkB;AAAA;AAAA,MAEFC,KAFE,kBAEFA,KAFE;AAAA,MAEKC,OAFL,kBAEKA,OAFL;AAAA,MAEcC,MAFd,kBAEcA,MAFd;;AASzB,SACE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,iBAAU,MAFZ;AAGE,IAAA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAE,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF;AADQ;AAAA,uBAEFL,YAAY,EAFV;;AAAA;AAGRF,gBAAAA,QAAQ,CAAC,EAAD,CAAR;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAU,IAAA,QAAQ,EAAEI,OAApB;AAA6B,iBAAWA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACA,KAAD,IAAU,CAACC,OAAX,IAAsBC,MAAtB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,EAME;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEN,KAJT;AAKE,IAAA,QAAQ,EAAE,kBAAAO,CAAC;AAAA,aAAIN,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,CATF,CADF;AA8BD,CAvCD;;AAyCA,eAAeX,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\n\nexport const REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst RequestReset = () => {\n  const [email, setEmail] = useState('');\n  const [requestReset, { error, loading, called }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: { email }\n    }\n  );\n\n  return (\n    <Form\n      method=\"post\"\n      data-test=\"form\"\n      onSubmit={async e => {\n        e.preventDefault();\n        await requestReset();\n        setEmail('');\n      }}\n    >\n      <fieldset disabled={loading} aria-busy={loading}>\n        <h2>Request a password reset</h2>\n        <Error error={error} />\n        {!error && !loading && called && (\n          <p>Success! Check your email for a reset link!</p>\n        )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Request Reset!</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default RequestReset;\n"]},"metadata":{},"sourceType":"module"}