{"ast":null,"code":"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nexport const REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nconst RequestReset = () => {\n  const [email, setEmail] = useState('');\n  const [requestReset, {\n    error,\n    loading,\n    called\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: {\n      email\n    }\n  });\n  return React.createElement(Form, {\n    method: \"post\",\n    \"data-test\": \"form\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await requestReset();\n      setEmail('');\n    }\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading\n  }, React.createElement(\"h2\", null, \"Request a password reset\"), React.createElement(Error, {\n    error: error\n  }), !error && !loading && called && React.createElement(\"p\", null, \"Success! Check your email for a reset link!\"), React.createElement(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Request Reset!\")));\n};\n\nexport default RequestReset;","map":null,"metadata":{},"sourceType":"module"}