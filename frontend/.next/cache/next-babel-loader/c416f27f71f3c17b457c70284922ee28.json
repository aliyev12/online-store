{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/RemoveFromCart.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REMOVE_FROM_CART_MUTATION($id: ID!) {\\n    removeFromCart(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nexport var REMOVE_FROM_CART_MUTATION = gql(_templateObject());\nvar BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.red;\n});\n\nvar RemoveFromCart = function RemoveFromCart(_ref) {\n  var id = _ref.id;\n\n  // This gets called as soon as we get a response back from the server as soon as the mutation gets performed\n  var update = function update(cache, payload) {\n    console.log('RemoveFromCart....'); // 1. First read the cache\n\n    var data = cache.readQuery({\n      query: CURRENT_USER_QUERY\n    });\n    console.log('data from RemoveFromCart update func = ', data); // 2. Remove that item from the cart\n    // 3. Write it back to the cache\n  };\n\n  var _useMutation = useMutation(REMOVE_FROM_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      removeFromCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return React.createElement(BigButton, {\n    title: \"Delete Item\",\n    disabled: loading,\n    onClick: function onClick() {\n      removeFromCart()[\"catch\"](function (err) {\n        return alert(err.message);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\xD7\", loading && '...');\n};\n\nRemoveFromCart.propTypes = {\n  id: PropTypes.string.isRequired\n};\nexport default RemoveFromCart;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/RemoveFromCart.js"],"names":["React","useMutation","gql","styled","PropTypes","CURRENT_USER_QUERY","REMOVE_FROM_CART_MUTATION","BigButton","button","props","theme","red","RemoveFromCart","id","update","cache","payload","console","log","data","readQuery","query","variables","removeFromCart","loading","error","err","alert","message","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,OAAO,IAAMC,yBAAyB,GAAGJ,GAAH,mBAA/B;AAQP,IAAMK,SAAS,GAAGJ,MAAM,CAACK,MAAV;AAAA;AAAA;AAAA,oFAKF,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,GAAhB;AAAA,CALH,CAAf;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAC/B;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD+B,CAE/B;;AACA,QAAMC,IAAI,GAAGJ,KAAK,CAACK,SAAN,CAAgB;AAAEC,MAAAA,KAAK,EAAEhB;AAAT,KAAhB,CAAb;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDC,IAAvD,EAJ+B,CAK/B;AACA;AACH,GAPD;;AAF+B,qBAUYlB,WAAW,CACtDK,yBADsD,EAEtD;AACEgB,IAAAA,SAAS,EAAE;AAAET,MAAAA,EAAE,EAAFA;AAAF,KADb;AAEEC,IAAAA,MAAM,EAANA;AAFF,GAFsD,CAVvB;AAAA;AAAA,MAU1BS,cAV0B;AAAA;AAAA,MAURC,OAVQ,kBAURA,OAVQ;AAAA,MAUCC,KAVD,kBAUCA,KAVD;;AAiBjC,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,QAAQ,EAAED,OAFZ;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,cAAc,WAAd,CAAuB,UAAAG,GAAG;AAAA,eAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAT;AAAA,OAA1B;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOUJ,OAAO,IAAI,KAPrB,CADF;AAWD,CA5BD;;AA8BAZ,cAAc,CAACiB,SAAf,GAA2B;AACzBhB,EAAAA,EAAE,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AADI,CAA3B;AAIA,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\n\nexport const REMOVE_FROM_CART_MUTATION = gql`\n  mutation REMOVE_FROM_CART_MUTATION($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nconst RemoveFromCart = ({ id }) => {\n    // This gets called as soon as we get a response back from the server as soon as the mutation gets performed\n    const update = (cache, payload) => {\n        console.log('RemoveFromCart....');\n        // 1. First read the cache\n        const data = cache.readQuery({ query: CURRENT_USER_QUERY });\n        console.log('data from RemoveFromCart update func = ', data);\n        // 2. Remove that item from the cart\n        // 3. Write it back to the cache\n    }\n  const [removeFromCart, { loading, error }] = useMutation(\n    REMOVE_FROM_CART_MUTATION,\n    {\n      variables: { id },\n      update\n    }\n  );\n  return (\n    <BigButton\n      title=\"Delete Item\"\n      disabled={loading}\n      onClick={() => {\n        removeFromCart().catch(err => alert(err.message));\n      }}\n    >\n      &times;{loading && '...'}\n    </BigButton>\n  );\n};\n\nRemoveFromCart.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nexport default RemoveFromCart;\n"]},"metadata":{},"sourceType":"module"}