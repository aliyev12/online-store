{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    itemsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nimport Error from './ErrorMessage';\nexport var PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page;\n\n  var _useQuery = useQuery(PAGINATION_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n  var count = data.itemsConnection.aggregate.count;\n  var pages = Math.ceil(count / perPage);\n  return React.createElement(PaginationStyles, {\n    \"data-test\": \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Great Fits! Page \", page, \" of \", pages)), React.createElement(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page - 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\u2190 Prev\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Page \", page, \" of \", pages), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, count, \" Items Total\"), React.createElement(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page + 1\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Next \\u2192\")));\n};\n\nexport default Pagination; // import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n// export default Pagination;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js"],"names":["React","Head","Link","useQuery","gql","PaginationStyles","perPage","Error","PAGINATION_QUERY","Pagination","page","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","pathname","query"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;;AAUP,IAAMK,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACEP,QAAQ,CAACK,gBAAD,CADV;AAAA,MACvBG,IADuB,aACvBA,IADuB;AAAA,MACjBC,OADiB,aACjBA,OADiB;AAAA,MACRC,KADQ,aACRA,KADQ;;AAE/B,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,MAAMC,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGR,OAAlB,CAAd;AACA,SACE,oBAAC,gBAAD;AAAkB,iBAAU,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBI,IADpB,UAC8BO,KAD9B,CADF,CADF,EAME,oBAAC,IAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAE;AACJG,MAAAA,QAAQ,EAAE,OADN;AAEJC,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CANF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,IADR,UACkBO,KADlB,CAjBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,iBApBF,EAqBE,oBAAC,IAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAE;AACJM,MAAAA,QAAQ,EAAE,OADN;AAEJC,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,qBAAeA,IAAI,IAAIO,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CArBF,CADF;AAmCD,CA1CD;;AA4CA,eAAeR,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nimport Error from './ErrorMessage';\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  const { data, loading, error } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <Error error={error}/>\n\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles data-test=\"pagination\">\n      <Head>\n        <title>\n          Great Fits! Page {page} of {pages}\n        </title>\n      </Head>\n      <Link\n        prefetch\n        href={{\n          pathname: 'items',\n          query: { page: page - 1 }\n        }}\n      >\n        <a className=\"prev\" aria-disabled={page <= 1}>\n          ← Prev\n        </a>\n      </Link>\n      <p>\n        Page {page} of {pages}\n      </p>\n      <p>{count} Items Total</p>\n      <Link\n        prefetch\n        href={{\n          pathname: 'items',\n          query: { page: page + 1 }\n        }}\n      >\n        <a className=\"next\" aria-disabled={page >= pages}>\n          Next →\n        </a>\n      </Link>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n\n// import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n\n// export default Pagination;\n"]},"metadata":{},"sourceType":"module"}