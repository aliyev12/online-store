{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addToCart($id: ID!) {\\n    addToCart(id: $id) {\\n      id\\n      quantity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CURRENT_USER_QUERY } from '../lib/queries';\nvar ADD_TO_CART_MUTATION = gql(_templateObject());\n\nvar AddToCart = function AddToCart(_ref) {\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  return React.createElement(\"button\", {\n    onClick: addToCart,\n    disabled: loading\n  }, \"Add\", loading && 'ing', \" To Cart \\uD83D\\uDED2\");\n};\n\nexport default AddToCart; // import React from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// const ADD_TO_CART_MUTATION = gql`\n//   mutation addToCart($id: ID!) {\n//     addToCart(id: $id) {\n//       id\n//       quantity\n//     }\n//   }\n// `;\n// const AddToCart = ({ id }) => {\n//   return (\n//     <Mutation mutation={ADD_TO_CART_MUTATION} variables={{ id }}>\n//       {addToCart => <button onClick={addToCart}>Add To Cart ðŸ›’</button>}\n//     </Mutation>\n//   );\n// };\n// export default AddToCart;","map":null,"metadata":{},"sourceType":"module"}