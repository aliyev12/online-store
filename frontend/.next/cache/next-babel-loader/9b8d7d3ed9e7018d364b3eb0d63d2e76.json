{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/OrderList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query USER_ORDERS_QUERY {\\n    orders(orderBy: createAt_DESC) {\\n      id\\n      total\\n      createdAt\\n      items {\\n        id\\n        title\\n        price\\n        description\\n        quantity\\n        image\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\nvar USER_ORDERS_QUERY = gql(_templateObject());\n\nvar OrderList = function OrderList() {\n  // const { data: { orders }, loading, error } = useQuery(USER_ORDERS_QUERY);\n  var some = useQuery(USER_ORDERS_QUERY); //   if (loading) return <p>Loading...</p>;\n  //   if (error) return <Error error={error}/>;\n\n  console.log('some = ', some);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"You have  orders\");\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/OrderList.js"],"names":["React","useQuery","formatDistance","Link","styled","gql","formatMoney","OrderItemStyles","Error","USER_ORDERS_QUERY","OrderList","some","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,iBAAiB,GAAGJ,GAAH,mBAAvB;;AAkBA,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB;AACA,MAAMC,IAAI,GAAGV,QAAQ,CAACQ,iBAAD,CAArB,CAFoB,CAGxB;AACA;;AACEG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,CAPD;;AASA,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport Error from './ErrorMessage';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst OrderList = () => {\n    // const { data: { orders }, loading, error } = useQuery(USER_ORDERS_QUERY);\n    const some = useQuery(USER_ORDERS_QUERY);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <Error error={error}/>;\n  console.log('some = ', some)\n  return <p>You have  orders</p>\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}