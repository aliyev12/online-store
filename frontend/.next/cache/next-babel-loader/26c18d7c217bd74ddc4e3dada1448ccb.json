{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Signin.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    signin(email: $email, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nvar SIGNIN_MUTATION = gql(_templateObject());\n\nvar Signin = function Signin() {\n  var _useState = useState({\n    email: '',\n    name: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  var handleFormField = function handleFormField(_ref) {\n    var target = _ref.target;\n    setInputs(_objectSpread({}, inputs, _defineProperty({}, target.name, target.value)));\n  };\n\n  return React.createElement(Form, {\n    method: \"post\",\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return signup();\n\n              case 3:\n                res = _context.sent;\n                setInputs(_objectSpread({}, inputs, {\n                  email: '',\n                  name: '',\n                  password: ''\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sign Into Your Account\"), React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: inputs.email,\n    onChange: handleFormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Password\", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: inputs.password,\n    onChange: handleFormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Sign In!\")));\n};\n\nexport default Signin; // import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n// import { CURRENT_USER_QUERY } from './User';\n// const SIGNIN_MUTATION = gql`\n//   mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n//     signin(email: $email, password: $password) {\n//       id\n//       email\n//       name\n//     }\n//   }\n// `;\n// const Signin = () => {\n//   const [inputs, setInputs] = useState({\n//     email: '',\n//     name: '',\n//     password: ''\n//   });\n//   const handleFormField = ({ target }) => {\n//     setInputs({\n//       ...inputs,\n//       [target.name]: target.value\n//     });\n//   };\n//   return (\n//     <Mutation\n//       mutation={SIGNIN_MUTATION}\n//       variables={inputs}\n//       refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n//     >\n//       {(signup, { error, loading }) => {\n//         return (\n//           <Form\n//             method=\"post\"\n//             onSubmit={async e => {\n//               e.preventDefault();\n//               const res = await signup();\n//               setInputs({\n//                 ...inputs,\n//                 email: '',\n//                 name: '',\n//                 password: ''\n//               });\n//             }}\n//           >\n//             <fieldset disabled={loading} aria-busy={loading}>\n//               <h2>Sign Into Your Account</h2>\n//               <Error error={error} />\n//               <label htmlFor=\"email\">\n//                 Email\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   value={inputs.email}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <label htmlFor=\"password\">\n//                 Password\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   value={inputs.password}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <button type=\"submit\">Sign In!</button>\n//             </fieldset>\n//           </Form>\n//         );\n//       }}\n//     </Mutation>\n//   );\n// };\n// export default Signin;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Signin.js"],"names":["React","useState","useMutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNIN_MUTATION","Signin","email","name","password","inputs","setInputs","variables","refetchQueries","query","signup","error","loading","handleFormField","target","value","e","preventDefault","res"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Signin = () => {\n  const [inputs, setInputs] = useState({\n    email: '',\n    name: '',\n    password: ''\n  });\n\n  const [signup, { error, loading }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{ query: CURRENT_USER_QUERY }]\n  });\n\n  const handleFormField = ({ target }) => {\n    setInputs({\n      ...inputs,\n      [target.name]: target.value\n    });\n  };\n\n  return (\n    <Form\n      method=\"post\"\n      onSubmit={async e => {\n        e.preventDefault();\n        const res = await signup();\n        setInputs({\n          ...inputs,\n          email: '',\n          name: '',\n          password: ''\n        });\n      }}\n    >\n      <fieldset disabled={loading} aria-busy={loading}>\n        <h2>Sign Into Your Account</h2>\n        <Error error={error} />\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={inputs.email}\n            onChange={handleFormField}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={inputs.password}\n            onChange={handleFormField}\n          />\n        </label>\n        <button type=\"submit\">Sign In!</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default Signin;\n\n// import React, { useState } from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n// import { CURRENT_USER_QUERY } from './User';\n\n// const SIGNIN_MUTATION = gql`\n//   mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n//     signin(email: $email, password: $password) {\n//       id\n//       email\n//       name\n//     }\n//   }\n// `;\n\n// const Signin = () => {\n//   const [inputs, setInputs] = useState({\n//     email: '',\n//     name: '',\n//     password: ''\n//   });\n\n//   const handleFormField = ({ target }) => {\n//     setInputs({\n//       ...inputs,\n//       [target.name]: target.value\n//     });\n//   };\n\n//   return (\n//     <Mutation\n//       mutation={SIGNIN_MUTATION}\n//       variables={inputs}\n//       refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n//     >\n//       {(signup, { error, loading }) => {\n//         return (\n//           <Form\n//             method=\"post\"\n//             onSubmit={async e => {\n//               e.preventDefault();\n//               const res = await signup();\n//               setInputs({\n//                 ...inputs,\n//                 email: '',\n//                 name: '',\n//                 password: ''\n//               });\n//             }}\n//           >\n//             <fieldset disabled={loading} aria-busy={loading}>\n//               <h2>Sign Into Your Account</h2>\n//               <Error error={error} />\n//               <label htmlFor=\"email\">\n//                 Email\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   value={inputs.email}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <label htmlFor=\"password\">\n//                 Password\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   value={inputs.password}\n//                   onChange={handleFormField}\n//                 />\n//               </label>\n//               <button type=\"submit\">Sign In!</button>\n//             </fieldset>\n//           </Form>\n//         );\n//       }}\n//     </Mutation>\n//   );\n// };\n\n// export default Signin;\n"]},"metadata":{},"sourceType":"module"}