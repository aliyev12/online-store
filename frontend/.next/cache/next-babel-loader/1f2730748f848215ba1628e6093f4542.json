{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION($email: String!) {\\n    requestReset(email: $email) {\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nexport var REQUEST_RESET_MUTATION = gql(_templateObject());\n\nvar RequestReset = function RequestReset() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: {\n      email: email\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      requestReset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading,\n      called = _useMutation2$.called;\n\n  return React.createElement(Form, {\n    method: \"post\",\n    \"data-test\": \"form\",\n    onSubmit:\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return requestReset();\n\n              case 3:\n                setEmail('');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  }, React.createElement(\"fieldset\", {\n    disabled: loading,\n    \"aria-busy\": loading\n  }, React.createElement(\"h2\", null, \"Request a password reset\"), React.createElement(Error, {\n    error: error\n  }), !error && !loading && called && React.createElement(\"p\", null, \"Success! Check your email for a reset link!\"), React.createElement(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    }\n  })), React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Request Reset!\")));\n};\n\nexport default RequestReset;","map":null,"metadata":{},"sourceType":"module"}