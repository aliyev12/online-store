{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    itemsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Query } from 'react-apollo';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nexport var PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page;\n  return React.createElement(Query, {\n    query: PAGINATION_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (_ref2) {\n    var data = _ref2.data,\n        loading = _ref2.loading,\n        error = _ref2.error;\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Loading...\");\n    var count = data.itemsConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    return React.createElement(PaginationStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Great Fits! Page \", page, \" of \", pages)), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'items',\n        query: {\n          page: page - 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"prev\",\n      \"aria-disabled\": page <= 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\u2190 Prev\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Page \", page, \" of \", pages), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, count, \" Items Total\"), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'items',\n        query: {\n          page: page + 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"next\",\n      \"aria-disabled\": page >= pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Next \\u2192\")));\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js"],"names":["React","gql","Head","Link","Query","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","pathname","query"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,IAAMC,gBAAgB,GAAGN,GAAH,mBAAtB;;AAUP,IAAMO,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC/B,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAA8B;AAAA,QAA3BG,IAA2B,SAA3BA,IAA2B;AAAA,QAArBC,OAAqB,SAArBA,OAAqB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AAC7B,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBG,IADpB,UAC8BO,KAD9B,CADF,CADF,EAME,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJG,QAAAA,QAAQ,EAAE,OADN;AAEJC,QAAAA,KAAK,EAAE;AAAEX,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAI,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CANF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQA,IADR,UACkBO,KADlB,CAfF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAJ,iBAlBF,EAmBE,oBAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAE;AACJM,QAAAA,QAAQ,EAAE,OADN;AAEJC,QAAAA,KAAK,EAAE;AAAEX,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeA,IAAI,IAAIO,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CAnBF,CADF;AA+BD,GApCH,CADF;AAwCD,CAzCD;;AA2CA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Query } from 'react-apollo';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>;\n        const count = data.itemsConnection.aggregate.count;\n        const pages = Math.ceil(count / perPage);\n        return (\n          <PaginationStyles>\n            <Head>\n              <title>\n                Great Fits! Page {page} of {pages}\n              </title>\n            </Head>\n            <Link\n              prefetch\n              href={{\n                pathname: 'items',\n                query: { page: page - 1 }\n              }}\n            >\n              <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n            </Link>\n            <p>\n              Page {page} of {pages}\n            </p>\n            <p>{count} Items Total</p>\n            <Link\n              prefetch\n              href={{\n                pathname: 'items',\n                query: { page: page + 1 }\n              }}\n            >\n              <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n            </Link>\n          </PaginationStyles>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}