{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query PAGINATION_QUERY {\\n        itemsConnection {\\n            aggregate {\\n                count\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PaginationStyles from './styles/PaginationStyles';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { perPage } from '../config';\nexport var PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(_ref) {\n  var page = _ref.page;\n  return React.createElement(PaginationStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: PAGINATION_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (_ref2) {\n    var data = _ref2.data,\n        loading = _ref2.loading,\n        error = _ref2.error;\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading...\");\n    var count = data.itemsConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Page \", page, \" of \", pages);\n  }));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/abdulaliyev/tut/nextjs-graphql/online-store/frontend/components/Pagination.js"],"names":["React","PaginationStyles","gql","Query","perPage","PAGINATION_QUERY","Pagination","page","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,IAAMC,gBAAgB,GAAGH,GAAH,mBAAtB;;AAUP,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,iBAA8B;AAAA,QAA3BG,IAA2B,SAA3BA,IAA2B;AAAA,QAArBC,OAAqB,SAArBA,OAAqB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AAC3B,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASG,IAAT,UAAmBO,KAAnB,CADJ;AAGH,GARL,CADJ,CADJ;AAcH,CAfD;;AAiBA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport PaginationStyles from './styles/PaginationStyles';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { perPage } from '../config';\n\nexport const PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY {\n        itemsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`;\n\nconst Pagination = ({ page }) => {\n    return (\n        <PaginationStyles>\n            <Query query={PAGINATION_QUERY}>\n                {({ data, loading, error }) => {\n                    if (loading) return <p>Loading...</p>;\n                    const count = data.itemsConnection.aggregate.count;\n                    const pages = Math.ceil(count / perPage);\n                    return (\n                        <p>Page {page} of {pages}</p>\n                    )\n                }}\n            </Query>\n        </PaginationStyles>\n    )\n}\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}