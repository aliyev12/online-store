{"ast":null,"code":"import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { ALL_ITEMS_QUERY } from './Items';\nexport const DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nconst DeleteItem = ({\n  children,\n  id\n}) => {\n  const update = (cache, payload) => {\n    // Manually update the cache on the client so it matches the server\n    // 1. Read the cache for items we want\n    const data = cache.readQuery({\n      query: ALL_ITEMS_QUERY\n    }); // 2. Filter the deleted item out of the page\n\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id); // 3. Put the items back\n\n    cache.writeQuery({\n      query: ALL_ITEMS_QUERY,\n      data\n    });\n  };\n\n  const [deleteItem, {\n    error\n  }] = useMutation(DELETE_ITEM_MUTATION, {\n    update\n  });\n  return React.createElement(\"button\", {\n    onClick: () => {\n      if (confirm('Are you sure you wanted to delete this?')) {\n        deleteItem({\n          variables: {\n            id\n          }\n        }).catch(err => {\n          alert(err.message);\n        });\n      }\n    }\n  }, children);\n};\n\nexport default DeleteItem; // import React from 'react';\n// import { Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import { ALL_ITEMS_QUERY } from './Items';\n// export const DELETE_ITEM_MUTATION = gql`\n//   mutation DELETE_ITEM_MUTATION($id: ID!) {\n//     deleteItem(id: $id) {\n//       id\n//     }\n//   }\n// `;\n// const DeleteItem = ({ children, id }) => {\n//   const update = (cache, payload) => {\n//     // Manually update the cache on the client so it matches the server\n//     // 1. Read the cache for items we want\n//     const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n//     // 2. Filter the deleted item out of the page\n//     data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n//     // 3. Put the items back\n//     cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n//   };\n//   return (\n//     <Mutation\n//       mutation={DELETE_ITEM_MUTATION}\n//       variables={{ id }}\n//       update={update}\n//     >\n//       {(deleteItem, { error }) => (\n//         <button\n//           onClick={() => {\n//             if (confirm('Are you sure you wanted to delete this?')) {\n//               deleteItem().catch(err => {\n//                 alert(err.message);\n//               });\n//             }\n//           }}\n//         >\n//           {children}\n//         </button>\n//       )}\n//     </Mutation>\n//   );\n// };\n// export default DeleteItem;","map":null,"metadata":{},"sourceType":"module"}