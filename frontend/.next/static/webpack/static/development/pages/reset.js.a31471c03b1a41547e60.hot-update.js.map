{"version":3,"file":"static/webpack/static/development/pages/reset.js.a31471c03b1a41547e60.hot-update.js","sources":["webpack:///./components/Reset.js","webpack:///./pages/reset.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $resetToken: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    requestPassword(\n      resetToken: $resetToken\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Reset = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  return (\n    <Mutation\n      mutation={RESET_MUTATION}\n      variables={{\n        resetToken,\n        password,\n        confirmPassword\n      }}\n    >\n      {(reset, { error, loading, called }) => {\n        return (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault();\n              await reset();\n              setEmail('');\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Reset Your Password</h2>\n              <Error error={error} />\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </label>\n              <label htmlFor=\"confirmPassword\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={e => setConfirmPassword(e.target.value)}\n                />\n              </label>\n              <button type=\"submit\">Reset Your Password!</button>\n            </fieldset>\n          </Form>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nReset.propTypes = {\n  resetToken: PropTypes.string.isRequired,\n}\n\nexport default Reset;\n","import Reset from '../components/Reset';\n\nexport default ({ query }) => (\n    <div>\n        <p>Reset Your Password {query.resetToken}</p>\n    </div>\n);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;AClFA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}