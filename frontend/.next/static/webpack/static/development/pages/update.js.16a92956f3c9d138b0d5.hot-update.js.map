{"version":3,"file":"static/webpack/static/development/pages/update.js.16a92956f3c9d138b0d5.hot-update.js","sources":["webpack:///./components/UpdateItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nexport const SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\nexport const UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\nconst UpdateItem = props => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n\n  const updateItem = async (e, updateItemMutation) => {\n    e.preventDefault();\n    console.log('updating item..');\n    const variables = {\n      id: props.id,\n    };\n    title ? variables.title = title : null;\n    description ? variables.description = description : null;\n    price ? variables.price = price : null;\n    const res = await updateItemMutation({ variables });\n  }\n\n  return (\n    <Query query={SINGLE_ITEM_QUERY} variables={{ id: props.id }}>\n      {({ data, loading }) => {\n        if (loading) <p>Loading...</p>;\n        if (!data.item) return <p>No item for ID {props.id}</p>\n        return (\n          <Mutation\n            mutation={UPDATE_ITEM_MUTATION}\n            variables={{\n              title,\n              description,\n              image,\n              largeImage,\n              price\n            }}\n          >\n            {(updateItem, { loading, error }) => (\n              <Form onSubmit={e => updateItem(e, updateItem)} method=\"post\">\n                <Error error={error} />\n                <fieldset disabled={loading} aria-busy={loading}>\n                  <label htmlFor=\"title\">\n                    Title\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      name=\"title\"\n                      placeholder=\"Title\"\n                      required\n                      defaultValue={data.item.title}\n                      onChange={e => setTitle(e.target.value)}\n                    />\n                  </label>\n                  <label htmlFor=\"price\">\n                    Price\n                    <input\n                      type=\"number\"\n                      id=\"price\"\n                      name=\"price\"\n                      placeholder=\"Price\"\n                      required\n                      defaultValue={data.item.price}\n                      onChange={e => setPrice(e.target.value)}\n                    />\n                  </label>\n                  <label htmlFor=\"title\">\n                    Description\n                    <textarea\n                      id=\"description\"\n                      name=\"description\"\n                      placeholder=\"Enter a Description\"\n                      required\n                      defaultValue={data.item.description}\n                      onChange={e => setDescription(e.target.value)}\n                    />\n                  </label>\n                  <button type=\"submit\">Submit</button>\n                </fieldset>\n              </Form>\n            )}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default UpdateItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AAovCA;AA6CA;AAGA;AACA;AACA;;;;A","sourceRoot":""}