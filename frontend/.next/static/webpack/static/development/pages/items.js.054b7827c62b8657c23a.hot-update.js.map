{"version":3,"file":"static/webpack/static/development/pages/items.js.054b7827c62b8657c23a.hot-update.js","sources":["webpack:///./components/Pagination.js"],"sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\";\nimport Error from \"./ErrorMessage\";\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = ({ page }) => {\n  const { data, loading, error } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <Error error={error} />;\n\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles data-test=\"pagination\">\n      <Head>\n        <title>\n          Tent Store ~ Page {page} of {pages}\n        </title>\n      </Head>\n      <Link\n        prefetch\n        href={{\n          pathname: \"items\",\n          query: { page: page - 1 }\n        }}\n      >\n        <a className=\"prev\" aria-disabled={page <= 1}>\n          ← Prev\n        </a>\n      </Link>\n      <p>\n        Page {page} of <span className=\"totalPages\">{pages}</span>\n      </p>\n      <p>{count} Items Total</p>\n      <Link\n        prefetch\n        href={{\n          pathname: \"items\",\n          query: { page: page + 1 }\n        }}\n      >\n        <a className=\"next\" aria-disabled={page >= pages}>\n          Next →\n        </a>\n      </Link>\n    </PaginationStyles>\n  );\n};\n\nexport default Pagination;\n\n// import React from 'react';\n// import gql from 'graphql-tag';\n// import Head from 'next/head';\n// import Link from 'next/link';\n// import { Query } from 'react-apollo';\n// import PaginationStyles from './styles/PaginationStyles';\n// import { perPage } from '../config';\n\n// export const PAGINATION_QUERY = gql`\n//   query PAGINATION_QUERY {\n//     itemsConnection {\n//       aggregate {\n//         count\n//       }\n//     }\n//   }\n// `;\n\n// const Pagination = ({ page }) => {\n//   return (\n//     <Query query={PAGINATION_QUERY}>\n//       {({ data, loading, error }) => {\n//         if (loading) return <p>Loading...</p>;\n//         const count = data.itemsConnection.aggregate.count;\n//         const pages = Math.ceil(count / perPage);\n//         return (\n//           <PaginationStyles>\n//             <Head>\n//               <title>\n//                 Great Fits! Page {page} of {pages}\n//               </title>\n//             </Head>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page - 1 }\n//               }}\n//             >\n//               <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n//             </Link>\n//             <p>\n//               Page {page} of {pages}\n//             </p>\n//             <p>{count} Items Total</p>\n//             <Link\n//               prefetch\n//               href={{\n//                 pathname: 'items',\n//                 query: { page: page + 1 }\n//               }}\n//             >\n//               <a className=\"next\" aria-disabled={page >= pages}>Next →</a>\n//             </Link>\n//           </PaginationStyles>\n//         );\n//       }}\n//     </Query>\n//   );\n// };\n\n// export default Pagination;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}