{"version":3,"file":"static/webpack/static/development/pages/index.js.21e1dcc52a95741f4cdf.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport handleError from '../lib/handleError';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport {perPage} from '../config';\n//, orderBy: createdAt_DESC\nexport const ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Items = ({ page }) => {\n  console.log('page = ', page);\n  console.log('perPage = ', perPage);\n  return (\n    <Center>\n      <p>Items!</p>\n      <Pagination page={page} />\n      <Query\n        query={ALL_ITEMS_QUERY}\n        variables={{\n          skip: page * perPage - perPage,\n          first: perPage\n        }}\n      >\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>{handleError(error)}</p>;\n\n          return (\n            <ItemsList>\n              {data.items.map(item => (\n                <Item key={item.id} item={item} />\n              ))}\n            </ItemsList>\n          );\n        }}\n      </Query>\n      <Pagination page={page} />\n    </Center>\n  );\n};\n\nexport default Items;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}