{"version":3,"file":"static/webpack/static/development/pages/sell.js.a8d5f1cdea647313f9f0.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nexport const CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nconst CreateItem = () => {\n  const [title, setTitle] = useState('Item Title');\n  const [description, setDescription] = useState('Item Description');\n  const [image, setImage] = useState('./temp.img');\n  const [largeImage, setLargeImage] = useState('./temp.img');\n  const [price, setPrice] = useState(9998);\n\n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'greatfits');\n    // https://res.cloudinary.com/greatfits/image/upload/v1564874789/sample.jpg\n    const res = await fetch(`https://api.cloudinary.com/v1_1/greatfits/image/upload`, {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    console.log('file = ', file);\n    // setImage(file.secure_url);\n    // setLargeImage(file.eager[0].secure_url);\n  }\n\n  return (\n    <Mutation\n      mutation={CREATE_ITEM_MUTATION}\n      variables={{\n        title,\n        description,\n        image,\n        largeImage,\n        price\n      }}\n    >\n      {(createItem, { loading, error }) => (\n        <Form\n          onSubmit={ async e => {\n            // Stop the form from submitting\n            e.preventDefault();\n            // Call the mutation\n            const res = await createItem();\n            // Change them to the single item page\n            console.log('res = ', res);\n            Router.push({\n                pathname: '/item',\n                query: { id: res.data.createItem.id }\n            });\n          }}\n          method=\"post\"\n        >\n        <Error error={error}/>\n          <fieldset disabled={loading} aria-busy={loading}>\n            <label htmlFor=\"file\">\n              Image\n              <input\n                type=\"file\"\n                id=\"file\"\n                name=\"file\"\n                placeholder=\"Upload an image\"\n                required\n                // value={image}\n                onChange={uploadFile}\n              />\n            </label>\n            <label htmlFor=\"title\">\n              Title\n              <input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                placeholder=\"Title\"\n                required\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"price\">\n              Price\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"Price\"\n                required\n                value={price}\n                onChange={e => setPrice(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"title\">\n              Description\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"Enter a Description\"\n                required\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </fieldset>\n        </Form>\n      )}\n    </Mutation>\n  );\n};\n\nexport default CreateItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAUA;AACA;AAEA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAYA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAejEA;AAuEA;AACA;AACA;;;;A","sourceRoot":""}