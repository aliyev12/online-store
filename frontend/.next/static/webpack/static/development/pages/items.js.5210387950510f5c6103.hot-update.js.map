{"version":3,"file":"static/webpack/static/development/pages/items.js.5210387950510f5c6103.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport handleError from \"../lib/handleError\";\nimport styled from \"styled-components\";\nimport Item from \"./Item\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\n\nexport const ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nconst Items = ({ page }) => {\n  const { data, error, loading } = useQuery(ALL_ITEMS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n\n  return (\n    <Center>\n      <Pagination page={page} />\n      {loading && <p>Loading...</p>}\n      {error && handleError(error)}\n      {!loading && !error && (\n        <ItemsList>\n          {data.items.map(item => (\n            <Item key={item.id} item={item} />\n          ))}\n        </ItemsList>\n      )}\n      <Pagination page={page} />\n    </Center>\n  );\n};\n\nexport default Items;\n// import React from 'react';\n// import { Query } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import handleError from '../lib/handleError';\n// import styled from 'styled-components';\n// import Item from './Item';\n// import Pagination from './Pagination';\n// import {perPage} from '../config';\n\n// export const ALL_ITEMS_QUERY = gql`\n//   query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n//     items(first: $first, skip: $skip, orderBy: createAt_DESC) {\n//       id\n//       title\n//       price\n//       description\n//       image\n//       largeImage\n//     }\n//   }\n// `;\n\n// const Center = styled.div`\n//   text-align: center;\n// `;\n\n// const ItemsList = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr 1fr;\n//   grid-gap: 60px;\n//   max-width: ${props => props.theme.maxWidth};\n//   margin: 0 auto;\n// `;\n\n// const Items = ({ page }) => {\n//   return (\n//     <Center>\n//       <p>Items!</p>\n//       <Pagination page={page} />\n//       <Query\n//         query={ALL_ITEMS_QUERY}\n//         variables={{\n//           skip: page * perPage - perPage,\n//           first: perPage\n//         }}\n//       >\n//         {({ data, error, loading }) => {\n//           if (loading) return <p>Loading...</p>;\n//           if (error) return <p>{handleError(error)}</p>;\n\n//           return (\n//             <ItemsList>\n//               {data.items.map(item => (\n//                 <Item key={item.id} item={item} />\n//               ))}\n//             </ItemsList>\n//           );\n//         }}\n//       </Query>\n//       <Pagination page={page} />\n//     </Center>\n//   );\n// };\n\n// export default Items;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAFA;AADA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}