# import * from './generated/prisma.graphql';

type SuccessMessage {
  message: String
}

type Mutation {
  #=== CREATE ===#
  createItem(
    title: String
    description: String
    image: String
    largeImage: String
    price: Int
  ): Item!
  #=== UPDATE ===#
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  #=== DELETE ===#
  deleteItem(id: ID!): Item
  #=== SIGN UP ===#
  signup(email: String!, password: String!, name: String!): User!
  #=== SIGN IN ===#
  signin(email: String!, password: String!): User!
  #=== SIGN OUT ===#
  signout: SuccessMessage
  #=== REQUEST RESET ===#
  requestReset(email: String!): SuccessMessage
  #=== RESET PASSWORD ===#
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  #=== UPDATE PERMISSIONS ===#
  updatePermissions(permissions: [Permission], userId: ID!): User
  #=== ADD TO CART ===#
  addToCart(id: ID!): CartItem
  #=== REMOVE FROM CART ===#
  removeFromCart(id: ID!): CartItem
  #=== CREATE ORDER ===#
  createOrder(token: String!): Order!
}

type Query {
  #=== ITEMS ===#
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  #=== ITEM ===#
  item(where: ItemWhereUniqueInput!): Item
  #=== ITEMS CONNECTION ===#
  itemsConnection(where: ItemWhereInput): ItemConnection!
  #=== CURRENT USER ===#
  me: User
  #=== USERS ===#
  users: [User]!
  #=== ORDER ===#
  order(id: ID!): Order
  #=== ORDERS ===#
  orders(orderBy: OrderOrderByInput): [Order]!
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
  orders: [OrderItem]
}
